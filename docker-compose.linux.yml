version: "3"

services:
  app:
    image: previousnext/php:7.2-dev
    # This makes the container run on the same network stack as your
    # workstation. Meaning that you can interact on "localhost".
    network_mode: host
    volumes:
      - .:/data
      # This allows for developers to access the remote environment.
      - $HOME/.ssh:/root/.ssh
      # Mount skpr credentials.
      - $HOME/.skpr.yml:/root/.skpr.yml
      # Mount composer cache.
      - $HOME/.composer:/root/.composer

  db:
    image: mariadb
    network_mode: host
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=local
      - MYSQL_USER=drupal
      - MYSQL_PASSWORD=drupal

  mail:
    image: mailhog/mailhog
    network_mode: host

#  varnish:
#    image: previousnext/varnish:4.x-dev
#    network_mode: host

#  memcache:
#    image: memcached:1.4-alpine
#    network_mode: host

#  phantomjs:
#    image: previousnext/gastonjs:1.0.2
#    network_mode: host

#  search:
#    image: previousnext/solr:5.x
#    network_mode: host

#  blackfire:
#    # See https://redmine.previousnext.com.au/projects/pnx-local/wiki/Docker_and_Blackfire
#    image: blackfire/blackfire
#    environment:
#      BLACKFIRE_SERVER_ID: YOUR_SERVER_ID_HERE
#      BLACKFIRE_SERVER_TOKEN: YOUR_SERVER_TOKEN_HERE

  # This is a regularly scheduled job which enables local cron tasks.
  #  * Gosu = Run as a user (www-data) to avoid permissions issues.
  #  * Microcron = Our project which ensures cron will run every 5min.
#  cron-drush:
#    image: previousnext/php:7.2-dev
#    entrypoint: ['gosu', 'www-data', 'microcron', '5m', 'drush cron']
#    network_mode: host
#    volumes:
#      - .:/data
