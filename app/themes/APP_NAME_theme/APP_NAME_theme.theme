<?php

/**
 * @file
 * Theme file.
 */

use Drupal\block\Entity\Block;

/**
 * Implements hook_theme_suggestions_block_alter().
 */
function APP_NAME_theme_theme_suggestions_block_alter(&$hooks, &$vars) {
  if (isset($vars['elements']['#id'])) {
    $block_id = $vars['elements']['#id'];
    if (($block = Block::load($block_id)) && $block instanceof Block) {
      $region = $block->getRegion();
      $hooks[] = 'block__' . $region . '__' . $vars['elements']['#base_plugin_id'];
      $hooks[] = 'block__' . $region . '__' . $block_id;
      // Pass region through to hook_preprocess_block().
      $vars['elements']['#region'] = $region;
    }
  }
}

/**
 * Implements hook_preprocess_block() for block.html.twig.
 */
function APP_NAME_theme_preprocess_block(&$vars) {
  // Pass the block_id through to the content.
  if (isset($vars['attributes']['id'])) {
    $vars['content']['#attributes']['block_id'] = $vars['attributes']['id'];
  }
  // Pass the region through to the content.
  if (isset($vars['elements']['#region'])) {
    $vars['content']['#attributes']['region'] = $vars['elements']['#region'];
  }
}

/**
 * Implements hook_theme_suggestions_menu_alter().
 */
function APP_NAME_theme_theme_suggestions_menu_alter(&$hooks, $vars) {
  // These are present as we set them in hook_preprocess_block().
  if (isset($vars['attributes']['region'])) {
    $hooks[] = $vars['theme_hook_original'] . '__' . $vars['attributes']['region'];
  }
  if (isset($vars['attributes']['block_id'])) {
    $block_id = str_replace(array('block-', '-'), array('', '_'), $vars['attributes']['block_id']);
    $hooks[] = $vars['theme_hook_original'] . '__' . $block_id;
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function APP_NAME_theme_preprocess_menu(&$vars) {
  // Add the menu label as a variable.
  $vars['menu_label'] = \Drupal::entityManager()->getStorage('menu')->load($vars['menu_name'])->label();
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function APP_NAME_theme_theme_suggestions_field_alter(&$hooks, $vars) {
  $field_name = $vars['element']['#field_name'];

  // Bare field templates.
  $bare_fields = [
    'field_media_image',
    'field_media_video_embed_field',
    'node_title',
    'body',
  ];
  if (in_array($field_name, $bare_fields, TRUE)) {
    $hooks[] = 'field__bare';
  }
}

/**
 * Implements hook_preprocess_HOOK() for pager.html.twig.
 */
function APP_NAME_theme_preprocess_pager(&$vars) {
  // Remove html characters for Previous/Next buttons
  if (isset($vars['items']['previous']['text'])) {
    $vars['items']['previous']['text'] = t('Previous');
  }
  if (isset($vars['items']['next']['text'])) {
    $vars['items']['next']['text'] = t('Next');
  }
}
